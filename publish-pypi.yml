jobs:
- job: linux_wheels
  dependsOn: ${{ parameters.dependsOn }}
  condition: succeeded()
  pool: {vmImage: 'Ubuntu-16.04'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python -m pip install --upgrade pip
        pip install cibuildwheel==0.11.1
        cibuildwheel --output-dir wheelhouse .
    - task: PublishPipelineArtifact@0
      inputs: {targetPath: 'wheelhouse', artifactName: 'linux_wheels' }

- job: macos_wheels
  dependsOn: ${{ parameters.dependsOn }}
  condition: succeeded()
  pool: {vmImage: 'macOS-10.13'}
  steps:
    - task: UsePythonVersion@0
    - bash: |
        python -m pip install --upgrade pip
        pip install cibuildwheel==0.11.1
        cibuildwheel --output-dir wheelhouse .
    - task: PublishPipelineArtifact@0
      inputs: {targetPath: 'wheelhouse', artifactName: 'macos_wheels' }

- job: windows_wheels
  dependsOn: ${{ parameters.dependsOn }}
  condition: succeeded()
  pool: {vmImage: 'vs2017-win2016'}
  steps:
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6', architecture: x64}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x64}}
    - bash: |
        python -m pip install --upgrade pip
        pip install cibuildwheel==0.11.1
        cibuildwheel --output-dir wheelhouse .
    - task: PublishPipelineArtifact@0
      inputs: {targetPath: 'wheelhouse', artifactName: 'windows_wheels' }

- job: sdist
  dependsOn: ${{ parameters.dependsOn }}
  condition: succeeded()
  pool: {vmImage: 'Ubuntu-16.04'}
  steps:
  - task: UsePythonVersion@0
    displayName: setup python3.7
    inputs: {versionSpec: '3.6'}
  # Remove the ubuntu-toolchain-r/test PPA, which is added by default. Some
  # packages were removed, and this is causing the g++multilib install to fail.
  # Similar issue: https://github.com/scikit-learn/scikit-learn/issues/13928
  - bash: 'sudo add-apt-repository --remove ppa:ubuntu-toolchain-r/test'
    displayName: "Remove ppa:ubuntu-toolchain-r/test"
  - script: 'sudo apt-get install -y --fix-missing libblas-dev liblapack-dev'
    displayName: "Install Scipy deps"
  - script: 'python -m pip install -U --user --force-reinstall pep517 setuptools_scm'
    displayName: "acquire build tools"
  - script: 'python -m pep517.build --source --out-dir wheelhouse .'
    displayName: "build source distribution"
  - script: 'python -m pip install -U --user sunpy[dev]'
    displayName: "install sunpy with all deps"
  - script: 'python -m pip install -U --user ./wheelhouse/*'
    displayName: "install dist"
  - script: 'python -c "import sunpy, sys; sys.exit(sunpy.self_test())"'
    displayName: "test dist"
  - task: PublishPipelineArtifact@0
    inputs: {targetPath: 'wheelhouse', artifactName: 'sdist' }

- job: publish
  dependsOn: [sdist,windows_wheels,macos_wheels,linux_wheels]
  condition: succeeded()
  pool: {vmImage: 'Ubuntu-16.04'}
  steps:
  - task: UsePythonVersion@0
    displayName: setup python3.7
    inputs: {versionSpec: '3.7'}
  - script: 'python -m pip install -U --user --force-reinstall twine'
    displayName: "install twine"
  - task: DownloadPipelineArtifact@1
  - task: TwineAuthenticate@0
    inputs:
      externalFeeds: 'pypi_sunpy'
  - script: 'python3.7 -m twine upload -r test --config-file $(PYPIRC_PATH) $(System.ArtifactsDirectory)/*/*'
    displayName: "upload sdist and wheels to PyPi"
