language: generic
os: linux
# Run jobs on container-based infrastructure, can be overridden per job
sudo: false

# Configure the build environment. Global variables are defined for all configurations.
env:
  global:
    - EVENT_TYPE='push pull_request cron'
    - TOX_ARG=''

stages:
  # Do the offline jobs, it will not proceed if any fail
  - name: "Initial jobs"
  # Do the rest of the jobs
  - name: "Comprehensive jobs"
  # Cron only jobs
  - name: "Cron jobs"
    if: type = cron

matrix:
  include:
    - os: osx
      name: "macOS 3.7 (py37-offline)"
      env: TOX_ENV='py37-offline'
      stage: "Initial jobs"

    - name: "3.6 offline (py36-offline)"
      env: TOX_ENV='py36-offline'
      stage: "Initial jobs"

    - name: "3.7 online (py37-online)"
      env:
        - TOX_ENV='py37-online'
        - TOX_ARG='-- -n=8'
      stage: "Comprehensive jobs"

    - name: "AstroPy dev (py37-astropydev)"
      env:
        - TOX_ENV='py37-astropydev'
      addons:
        apt:
          packages:
            - httpie
      stage: "Cron jobs"

    - name: "NumPy dev (py37-numpydev)"
      addons:
        apt:
          packages:
            - gfortran
            - libatlas-dev
            - libatlas-base-dev
      env: TOX_ENV='py37-numpydev'
      stage: "Cron jobs"

before_install:
  - git clone --depth 1 git://github.com/astropy/ci-helpers.git
  # We do not want to create the test env
  - echo "" > ci-helpers/travis/setup_dependencies_common.sh
  - source ci-helpers/travis/setup_conda.sh
  - pip install tox tox-conda

script:
  - tox -vv -e $TOX_ENV $TOX_ARG

after_success:
  - codecov

after_failure:
    # Send a nice matrix notification if the Astropy-dev job fails
    - NOTIF_TEXT='Build '$TRAVIS_BUILD_NUMBER' (Astropy-dev) Failed:'$TRAVIS_BUILD_WEB_URL
    - AVATAR_URL='https://s3-eu-west-1.amazonaws.com/cadair.com/Tessa-pride.png'
    - if [[ -n "$NOTIFURL" && $TOX_ENV == *astropydev* ]]; then http --verify=no POST $NOTIFURL displayName="Travis Bot" avatarUrl="$AVATAR_URL" text="$NOTIF_TEXT"; fi
