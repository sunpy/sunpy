language: c

os:
    - linux
    - osx

# Configure the build environment. Global varibles are defined for all
# configurations. Each configuration in the matrix is run for each python version
# above.
env:
    global:
        - PYTHON_VERSION=2.7
        - TEST_MODE='offline'
        - LATEST_NUMPY=1.9.1
        - LATEST_PANDAS=0.15.2
        - NUMPY_VERSION=$LATEST_NUMPY
        - PANDAS_VERSION=$LATEST_PANDAS
matrix:
    include:
         - os: linux
           env: NUMPY_VERSION=1.8.1
         - os: linux
           env: PANDAS_VERSION=0.14.1
         - os: linux
           env: TEST_MODE='astropy-dev'
         - os: linux
           env: TEST_MODE='sphinx'
         - os: linux
           env: TEST_MODE='online'

    allow_failures:
        - env: TEST_MODE='online'

before_install:
    - source continuous-integration/travis/install_$TRAVIS_OS_NAME.sh

# Install all SunPy dependacies using wheels.
install:
    # Add a conda env and set up extra binstar channels
    - conda create --yes -n test python=$PYTHON_VERSION
    - conda config --add channels sunpy --add channels astropy-ci-extras
    - source activate test
    # Install default dependancies
    - conda install --yes pip
    - conda install -q --yes numpy scipy astropy matplotlib pandas requests beautiful-soup sqlalchemy scikit-image pytest jinja2
    - pip install pytest-cov pytest-xdist coveralls
    # Install sunpy conda packages
    - conda install -q --yes suds-jurko glymur
    # Install the correct version of astropy
    - if [[ $TEST_MODE != 'astropy-dev' ]]; then conda install -q --yes astropy>=0.4.0; fi 
    - if [[ $TEST_MODE == 'astropy-dev' ]]; then pip install git+git://github.com/astropy/astropy.git; fi 
    # Install sphinx if needed
    - if [[ $TEST_MODE == 'sphinx' ]]; then conda install -q --yes sphinx; fi 

script:
    - if [[ $TEST_MODE == 'sphinx' ]]; then python setup.py build_sphinx -w; fi
    - if [[ $TEST_MODE == 'offline' || $TEST_MODE == 'astropy-dev' ]]; then python setup.py test --coverage --cov-report=html --offline-only; fi
    - if [[ $TEST_MODE == 'online' ]]; then python setup.py test --coverage --cov-report=term-missing --parallel=8; fi

after_success:
   - if [[ $TEST_MODE == 'online' ]]; then coveralls; fi

# Notify the IRC channel of build status
notifications:
  irc: "chat.freenode.net#SunPy"
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/d1bf84e1bc1293e4dbc5
