# We use C because conda manages our Python vesion
# and running on OS/X dosen't work with Python.
language: c

os:
    - linux
    - osx

# These are currently not used, but we want to cache the packages dir
# to reduce the number of packages to download.
cache:
    directories:
        $HOME/miniconda/pkgs
        /Users/travis/miniconda3/pkgs

# Configure the build environment. Global varibles are defined for all configurations.
env:
    global:
        # Modify these to represent the newest versions
        - LATEST_NUMPY=1.9.1
        - LATEST_PANDAS=0.15.2
        # Fixed global vars
        - PYTHON_VERSION=2.7
        - TEST_MODE='offline'
        - NUMPY_VERSION=$LATEST_NUMPY
        - PANDAS_VERSION=$LATEST_PANDAS

matrix:
    include:
         - os: linux
           env: NUMPY_VERSION=1.8.1
         - os: linux
           env: PANDAS_VERSION=0.14.1
         - os: linux
           env: TEST_MODE='astropy-dev'
         - os: linux
           env: TEST_MODE='sphinx'
         - os: linux
           env: TEST_MODE='online'

# If the online build fails, we don't want it to report the whole build broken.
    allow_failures:
        - env: TEST_MODE='online'

# Install miniconda
before_install:
    - source continuous-integration/travis/install_$TRAVIS_OS_NAME.sh

install:
    # Add a conda env and set up extra binstar channels
    - conda create --yes -n test python=$PYTHON_VERSION
    - conda config --add channels sunpy --add channels astropy-ci-extras --add channels https://conda.binstar.org/sunpy/channel/citesting
    - source activate test
    # Install default dependancies
    - conda install --yes pip
    - conda install -q --yes numpy=$NUMPY_VERSION pandas=$PANDAS_VERSION
    - conda install -q --yes scipy matplotlib requests beautiful-soup sqlalchemy scikit-image pytest jinja2 cython
    - pip install pytest-cov coverage coveralls
    # Install sunpy conda packages
    - conda install -q --yes suds-jurko glymur
    # Install the correct version of astropy
    - if [[ $TEST_MODE != 'astropy-dev' ]]; then conda install -q --yes astropy>=0.4.0; fi 
    - if [[ $TEST_MODE == 'astropy-dev' ]]; then pip install git+git://github.com/astropy/astropy.git; fi 
    # Install sphinx if needed
    - if [[ $TEST_MODE == 'sphinx' ]]; then conda install -q --yes sphinx; fi 

script:
    - if [[ $TEST_MODE == 'sphinx' ]]; then python setup.py build_sphinx -w; fi
    - if [[ $TEST_MODE == 'offline' || $TEST_MODE == 'astropy-dev' ]]; then python setup.py test --offline-only; fi
    - if [[ $TEST_MODE == 'online' ]]; then python setup.py test --coverage --cov-report=html; fi
    - if [[ $TEST_MODE == 'skip' ]]; then coveralls --rcfile='./sunpy/tests/coveragerc'; fi

# Notify the IRC channel of build status
notifications:
  irc: "chat.freenode.net#SunPy"
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/d1bf84e1bc1293e4dbc5
