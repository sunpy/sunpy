# We use C because conda manages our Python vesion
# and running on OS/X dosen't work with Python.
language: c

# os:
#      - linux
#     - osx

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed but can no longer be installed with
# sudo apt-get.
addons:
    apt:
        packages:
            - libatlas-dev
            - liblapack-dev
            - gfortran
            - graphviz
            - texlive-latex-extra
            - dvipng

# These are currently not used, but we want to cache the packages dir
# to reduce the number of packages to download.
# cache:
#    directories:
#       - $HOME/miniconda/pkgs
#       - $HOME/miniconda3/pkgs

# Configure the build environment. Global varibles are defined for all configurations.
env:
    global:
        # Modify these to represent the newest versions
        - PREVIOUS_PANDAS=0.15.2
        - PREVIOUS_NUMPY=1.9.3
        - FIGURES_NUMPY=1.10.0
        - FIGURES_MPL=1.5.1
        # Fixed global vars
        - PYTHON_VERSION=2.7
        - TEST_MODE='offline'
        - NUMPY_VERSION='stable'
        - MAIN_CMD='python setup.py'
        - CONDA_CHANNELS='astropy astropy-ci-extras sunpy jevans https://conda.anaconda.org/sunpy/label/citesting openastronomy'
        - CONDA_ALL_DEPENDENCIES='glymur Cython jinja2 scipy matplotlib requests beautifulsoup4 sqlalchemy scikit-image pytest wcsaxes pyyaml pandas'
        - CONDA_ALL_DEPENDENCIES2='glymur openjpeg Cython jinja2 scipy matplotlib requests beautifulsoup4 sqlalchemy scikit-image pytest wcsaxes pyyaml pandas'
        - PIP_DEPENDENCIES='suds-jurko sphinx-gallery pytest-cov'


    matrix:
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'

matrix:
    include:
         # # Try MacOS X
         - os: osx
           env: JOB="Py2" PYTHON_VERSION=2.7 SETUP_CMD='test'
                CONDA_DEPENDENCIES="$CONDA_ALL_DEPENDENCIES" #Without openjpeg

         # Try on Linux
         - os: linux
           env: JOB="Py2" PYTHON_VERSION=2.7 SETUP_CMD='test'
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: JOB="Py2PandasPrev" PYTHON_VERSION=2.7 SETUP_CMD='test'
                PANDAS_VERSION=$PREVIOUS_PANDAS CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: JOB="Py2AstropyDev" PYTHON_VERSION=2.7 SETUP_CMD='test'
                ASTROPY_VERSION='development' CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: JOB="Py2Sphinx" PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -w'
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
         - os: linux
           env: JOB="Py2Coverage" PYTHON_VERSION=2.7 SETUP_CMD='test --online --coverage'
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: JOB="Py2Doctest" PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -b doctest'
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: JOB="Py2NumpyPrev" PYTHON_VERSION=2.7 SETUP_CMD='test'
                NUMPY_VERSION=$PREVIOUS_NUMPY CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: JOB="Py2Figures" PYTHON_VERSION=2.7 SETUP_CMD='test --figure'
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
                NUMPY_VERSION=$FIGURES_NUMPY MATPLOTLIB_VERSION=$FIGURES_MPL
         - os: linux
           env: JOB="Py3.4" PYTHON_VERSION=3.4 SETUP_CMD='test' ASTROPY_VERSION='stable'
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES DEBUG=True
         - os: linux
           env: JOB="Py3.5" PYTHON_VERSION=3.5 SETUP_CMD='test' ASTROPY_VERSION='stable'
                DEBUG=True CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES
         - os: linux
           env: JOB="Py3NumpyDev" PYTHON_VERSION=3.5 SETUP_CMD='test'
                ASTROPY_VERSION='stable' NUMPY_VERSION='dev' DEBUG=True
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES

    # allow_failures has to repeat the environment from the matrix above to mark it as such
    allow_failures:
      - env: JOB="Py2Doctest" PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -b doctest'
             CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
      - env: JOB="Py2Coverage" PYTHON_VERSION=2.7 SETUP_CMD='test --online --coverage'
             CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh
    - source continuous-integration/travis/openjpeg.sh  # so glymur knows where to look

before_script:
    # Download the sample data for the build of the documentation.
    - if [[ $SETUP_CMD == *sphinx* ]]; then python -c "import sunpy.data; sunpy.data.download_sample_data()"; fi
    - if [[ $SETUP_CMD == *figure* ]]; then wget http://raw.githubusercontent.com/dpshelio/sunpy-figure-tests/np1104/conda_env; conda create --name testFigure --file conda_env ; source activate testFigure; fi

script:
    - $MAIN_CMD $SETUP_CMD

# after_success:
#     - if [[ $SETUP_CMD == *coverage* ]]; then coveralls --rcfile='./sunpy/tests/coveragerc'; fi

# Notify the IRC channel of build status
notifications:
  irc: "chat.freenode.net#SunPy"
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/d1bf84e1bc1293e4dbc5
