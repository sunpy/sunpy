# We use C because conda manages our Python vesion
# and running on OS/X dosen't work with Python.
language: c

# os:
#      - linux
#     - osx

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed but can no longer be installed with
# sudo apt-get.
addons:
    apt:
        packages:
            - libatlas-dev
            - liblapack-dev
            - gfortran
            - graphviz
            - texlive-latex-extra
            - dvipng

# These are currently not used, but we want to cache the packages dir
# to reduce the number of packages to download.
# cache:
#    directories:
#       - $HOME/miniconda/pkgs
#       - $HOME/miniconda3/pkgs

# Configure the build environment. Global varibles are defined for all configurations.
env:
    global:
        # Modify these to represent the newest versions
        - PREVIOUS_PANDAS=0.15.2
        # Fixed global vars
        - PYTHON_VERSION=2.7
        - TEST_MODE='offline'
        - NUMPY_VERSION='stable'
        - MAIN_CMD='python setup.py'
        - CONDA_CHANNELS='astropy astropy-ci-extras sunpy'
        - CONDA_ALL_DEPENDENCIES='Cython jinja2 scipy matplotlib requests beautiful-soup sqlalchemy scikit-image pytest wcsaxes pyyaml pandas' # pandas last to change version number on env
        - CONDA_ALL_DEPENDENCIES2="suds-jurko glymur $CONDA_ALL_DEPENDENCIES"


#    matrix:
#        - PYTHON_VERSION=2.7 # egg info
#        - PYTHON_VERSION=3.3
#        - PYTHON_VERSION=3.4
#        - PYTHON_VERSION=3.5

matrix:
    include:
         # Try MacOS X
         - os: osx
           env: PYTHON_VERSION=2.7 SETUP_CMD='test'
               CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2

         # Try on Linux
         - os: linux
           env: PYTHON_VERSION=2.7 SETUP_CMD='test'
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: PYTHON_VERSION=2.7 SETUP_CMD='test'
                CONDA_DEPENDENCIES="$CONDA_ALL_DEPENDENCIES2=$PREVIOUS_PANDAS" # all in quotes so it may take it
         - os: linux
           env: PYTHON_VERSION=2.7 SETUP_CMD='test'
                ASTROPY_VERSION='development' CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -w'
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: PYTHON_VERSION=2.7 SETUP_CMD='test --online --coverage --cov-report=html'
                CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2 PIP_DEPENDENCIES='pytest-cov'
         - os: linux
           env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -b doctest' CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2 # doctest will fail till new version of astropy-helpers
         - os: linux
           env: PYTHON_VERSION=2.7 SETUP_CMD='test' NUMPY_VERSION=1.9.2 CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: PYTHON_VERSION=2.7 SETUP_CMD='test --figure' CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2
         - os: linux
           env: PYTHON_VERSION=3.4 MAIN_CMD='continuous-integration/python3.sh' SETUP_CMD='' CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES

    # allow_failures has to repeat the environment from the matrix above to mark it as such
    allow_failures:
         - env: PYTHON_VERSION=2.7 SETUP_CMD='build_sphinx -b doctest' CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2 # doctest will fail till new version of astropy-helpers
         - env: PYTHON_VERSION=2.7 SETUP_CMD='test --online --coverage --cov-report=html' CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2 PIP_DEPENDENCIES='pytest-cov'
         - env: PYTHON_VERSION=2.7 SETUP_CMD='test --figure' CONDA_DEPENDENCIES=$CONDA_ALL_DEPENDENCIES2

install:
    # install openjpeg
    - wget http://openjpeg.googlecode.com/files/openjpeg-1.5.0-Linux-x86_64.tar.gz
    - tar xvzf openjpeg-1.5.0-Linux-x86_64.tar.gz --strip-components=1
    - export PATH=$HOME:$PATH
    - echo $PATH
    - echo $CONDA_DEPENDENCIES
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda_$TRAVIS_OS_NAME.sh

    # Download the sample data for the build of the documentation.
    - if [[ $SETUP_CMD == *sphinx* ]]; then python -c "import sunpy.data; sunpy.data.download_sample_data()"; fi
    - echo $MAIN_CMD $SETUP_CMD
script:
    - $MAIN_CMD $SETUP_CMD

    # - if [[ $TEST_MODE == 'skip' ]]; then coveralls --rcfile='./sunpy/tests/coveragerc'; fi
    

# Notify the IRC channel of build status
notifications:
  irc: "chat.freenode.net#SunPy"
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/d1bf84e1bc1293e4dbc5
