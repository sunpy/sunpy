[metadata]
name = sunpy
provides = sunpy
description = "SunPy: Python for Solar Physics"
long_description = file: README.rst
long_description_content_type = text/x-rst
author = The SunPy Community
author_email = sunpy@googlegroups.com
license = BSD 2-Clause
license_file = LICENSE.rst
url = https://sunpy.org
edit_on_github = True
github_project = sunpy/sunpy
platform = any
keywords = solar physics, solar, science, sun, wcs, coordinates
classifiers =
  Development Status :: 5 - Production/Stable
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Natural Language :: English
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.6
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
python_requires = >=3.6
packages = find:
include_package_data = True
setup_requires =
  setuptools_scm
install_requires =
  numpy>=1.15.0
  scipy>=1.0.0
  matplotlib>=2.1.2
  pandas>=0.23.0
  astropy>=3.1
  parfive[ftp]
  importlib_resources;python_version<"3.7"

[options.extras_require]
database = sqlalchemy
image = scikit-image
jpeg2000 = glymur!=0.9.0
net =
  beautifulsoup4
  drms
  python-dateutil
  zeep
  tqdm
asdf = asdf
dask = dask[array]
tests =
  hypothesis
  pytest
  pytest-astropy >= 0.8  # 0.8 is the first release to include filter-subpackage
  pytest-cov
  pytest-mock
  tox
  tox-conda
docs =
  ruamel.yaml
  sphinx>=2
  sphinx-astropy
  sphinx-gallery
  sunpy-sphinx-theme
  towncrier
  reproject
  astroquery
  jplephem

[options.package_data]
sunpy = CITATION.rst
sunpy.data = sunpyrc, test/*, test/*/*, data_manager/tests/db_testdata.csv
sunpy.database = tests/test_table.txt
sunpy.io = special/asdf/schemas/sunpy.org/sunpy/*/*.yaml, special/asdf/schemas/sunpy.org/sunpy/*/*/*.yaml
sunpy.tests = figure_hashes_py36.json

[options.entry_points]
asdf_extensions =
  sunpy = sunpy.io.special.asdf.extension:SunpyExtension
#pytest11 =
#  asdf = asdf.tests.schema_tester

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[tool:pytest]
minversion = 3.0
testpaths = "sunpy" "docs"
norecursedirs = ".tox" "build" "docs[\/]_build" "docs[\/]generated" "*.egg-info" "examples" "sunpy[/\]cm" ".jupyter"
doctest_plus = enabled
doctest_optionflags = NORMALIZE_WHITESPACE FLOAT_CMP ELLIPSIS
addopts = -p no:warnings --doctest-rst -m "not figure"
markers =
    online: marks this test function as needing online connectivity.
    figure: marks this test function as using hash-based Matplotlib figure verification. This mark is not meant to be directly applied, but is instead automatically applied when a test function uses the @sunpy.tests.helpers.figure_test decorator.
    flaky
    array_compare
# Disable internet access for tests not marked remote_data
remote_data_strict = True

[pycodestyle]
max_line_length = 100

[flake8]
max-line-length = 100
exclude =
    .git,
    __pycache__,
    docs/conf.py,
    build,
    sunpy/data/sample.py,
    sunpy/extern/**,
rst-directives =
    plot

[isort]
balanced_wrapping = True
default_section = THIRDPARTY
include_trailing_comma = True
known_astropy = astropy, asdf
known_first_party = sunpy
length_sort = False
length_sort_stdlib = True
line_length = 110
multi_line_output = 3
no_lines_before = LOCALFOLDER
not_skip = __init__.py
sections = FUTURE, STDLIB, THIRDPARTY, ASTROPY, FIRSTPARTY, LOCALFOLDER

[coverage:run]
omit =
  sunpy/conftest.py
  sunpy/cython_version*
  sunpy/*setup*
  sunpy/extern/*
  sunpy/*/tests/*
  sunpy/version*
  sunpy/__init__*
  sunpy/data/sample.py
  sunpy/data/_sample.py
  */sunpy/conftest.py
  */sunpy/cython_version*
  */sunpy/*setup*
  */sunpy/extern/*
  */sunpy/*/tests/*
  */sunpy/version*
  */sunpy/__init__*
  */sunpy/data/sample.py
  */sunpy/data/_sample.py

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
