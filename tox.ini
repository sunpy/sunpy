[tox]
envlist =
    py{37,38,39,310}{,-oldestdeps,-devdeps,-online,-figure,-hypothesis,-conda}
    build_docs
    codestyle
    base_deps
requires =
    setuptools >=56, !=61.0.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.12
isolated_build = true

[testenv]
pypi_filter = file://.test_package_pins.txt
whitelist_externals=
    /bin/bash
    /usr/bin/bash
# Run the tests in a temporary directory to make sure that we don't import sunpy from the source tree
changedir = .tmp/{envname}
description =
    run tests
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    online: that require remote data (as well as the offline ones)
    hypothesis: using hypothesis (both offline and online)
    figure: runs the figure test suite.
setenv =
    MPLBACKEND = agg
    SUNPY_SAMPLEDIR = {env:SUNPY_SAMPLEDIR:{toxinidir}/.tox/{envname}/sample_data/}
    PYTEST_COMMAND = pytest -vvv -r a --pyargs sunpy --cov-report=xml --cov=sunpy --cov-config={toxinidir}/setup.cfg {toxinidir}/docs
    devdeps,build_docs,online: HOME = {envtmpdir}
    HIDE_PARFIVE_PROGESS = True
    NO_VERIFY_HELIO_SSL = 1
    devdeps: PIP_EXTRA_INDEX_URL = https://pkgs.dev.azure.com/astropy-project/astropy/_packaging/nightly/pypi/simple/ https://pypi.anaconda.org/scipy-wheels-nightly/simple
deps =
    # devdeps is intended to be used to install the latest developer version of key dependencies.
    devdeps: astropy>=0.0.dev0
    devdeps: matplotlib>=0.0.dev0
    devdeps: git+https://github.com/asdf-format/asdf
    devdeps: git+https://github.com/sunpy/mpl-animators
    # Oldest deps we pin against
    oldestdeps: astropy<4.3.0
    oldestdeps: numpy<1.18.0
    oldestdeps: parfive<1.3.0
    oldestdeps: asdf<2.9.0
    oldestdeps: asdf-astropy<0.1.2
    oldestdeps: dask[array]<2.1.0
    oldestdeps: sqlalchemy<1.4.0
    oldestdeps: matplotlib<3.3.0
    oldestdeps: pandas<1.1.0
    oldestdeps: scipy<1.4.0
    oldestdeps: scikit-image<0.17.0
    oldestdeps: glymur<0.9.0
    oldestdeps: beautifulsoup4<4.9.0
    oldestdeps: drms<0.7
    oldestdeps: python-dateutil<2.9.0
    oldestdeps: tqdm<4.33.0
    oldestdeps: zeep<3.5.0
    oldestdeps: h5netcdf<0.9
    oldestdeps: cdflib<0.3.20
    oldestdeps: pytest<5.5
    oldestdeps: pytest-xdist<1.28
    # These are specific extras we use to run in specific factors
    online: pytest-rerunfailures
    online: pytest-timeout
    online: astroquery
    hypothesis: astroquery
    # Figure tests need a tightly controlled environment
    figure-!devdeps: astropy==4.2.1
    figure-!devdeps: matplotlib==3.3.2
    figure-!devdeps: mpl-animators==1.0.0
    # In 0.2.1 asdf-astropy pinned astropy>=5.0.4 for "reasons"
    # This messes with our versioning so we don't use that version here.
    # When we are doing figure tests with astropy 5.0+ we can remove this pin.
    figure-!devdeps: asdf-astropy<0.2.1
extras =
    all
    tests
commands =
    pip freeze --all --no-input
    oldestdeps: python -c "import astropy.time; astropy.time.update_leap_seconds()"
    !online-!hypothesis-!figure: {env:PYTEST_COMMAND} {posargs}
    online: {env:PYTEST_COMMAND} --hypothesis-show-statistics --reruns 2 --reruns-delay 15 --timeout=180 --remote-data=any {posargs}
    hypothesis: {env:PYTEST_COMMAND} --hypothesis-show-statistics --remote-data=any -m "hypothesis" {posargs}
    figure: /bin/bash -c "mkdir -p ./figure_test_images; python -c 'import matplotlib as mpl; print(mpl.ft2font.__file__, mpl.ft2font.__freetype_version__, mpl.ft2font.__freetype_build_type__)' > ./figure_test_images/figure_version_info.txt"
    figure: /bin/bash -c "pip freeze >> ./figure_test_images/figure_version_info.txt"
    figure: /bin/bash -c "cat ./figure_test_images/figure_version_info.txt"
    figure: python -c "import sunpy.tests.helpers as h; print(h.get_hash_library_name())"
    figure: {env:PYTEST_COMMAND} -m "mpl_image_compare" --mpl --remote-data=any --mpl-generate-summary=html --mpl-baseline-path=https://raw.githubusercontent.com/sunpy/sunpy-figure-tests/sunpy-master/figures/{envname}/ {posargs}

[testenv:build_docs]
changedir = docs
description = Invoke sphinx-build to build the HTML docs
extras =
    all
    docs
commands =
    pip freeze --all --no-input
    sphinx-build -j auto --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}
    python -c 'import pathlib; print("Documentation available under file://\{0\}".format(pathlib.Path(r"{toxinidir}") / "docs" / "_build" / "index.html"))'

[testenv:build_docs_ci]
changedir = docs
description = Invoke sphinx-build to build the HTML docs, first build without the gallery then with the gallery to fast-fail non-gallery fails
extras =
    all
    docs
commands =
    sphinx-build -j auto --color -W --keep-going -b html -d _build/.doctrees -D plot_gallery=0 . _build/html {posargs}
    sphinx-build -j auto --color -W --keep-going -b html -d _build/.doctrees . _build/html {posargs}

[testenv:codestyle]
pypi_filter =
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --color always --all-files --show-diff-on-failure

[testenv:base_deps]
description = Check the test suite does not fail if all optional dependencies are missing
extras =
deps =
    astropy
    numpy
    parfive[ftp]
commands =
    python -c "import sunpy; sunpy.self_test()"

# Requires tox-conda
[testenv:conda]
pypi_filter =
extras =
deps =
conda_deps =
    asdf
    astropy
    beautifulsoup4
    conda
    dask
    drms
    extension-helpers
    glymur
    h5netcdf
    hypothesis
    jinja2
    libopenblas>=0.3.12
    lxml
    matplotlib
    numpy
    openjpeg
    pandas
    parfive
    pillow
    pytest
    pytest-astropy
    pytest-cov
    pytest-mock
    pytest-xdist
    scikit-image
    scipy
    sphinx
    sqlalchemy
    towncrier
    zeep
conda_channels = conda-forge
install_command = pip install --no-deps {opts} {packages}
commands =
    conda list
    {env:PYTEST_COMMAND} {posargs}
