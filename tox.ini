[tox]
envlist =
    py{36,37,38}{,-oldestdeps,-devdeps,-online}
    build_docs
    figure
    figure_astropydev
    py36-conda
    codestyle
isolated_build = true

[testenv]

# We use bash in some of our enviroments so we have to whitelist it.
whitelist_externals=
    /bin/bash
    /usr/bin/bash

# Run the tests in a temporary directory to make sure that we don't import
# astropy from the source tree
changedir = .tmp/{envname}

# tox environments are constructued with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage

setenv =
    MPLBACKEND = agg
    COLUMNS = 180
    PYTEST_COMMAND = pytest -vvv --pyargs sunpy --cov=sunpy --cov-config={toxinidir}/setup.cfg {toxinidir}/docs
    astropydev,build_docs,online: HOME = {envtmpdir}

deps =

    # All our tests run in parallel which this plugin allows us to.
    pytest-xdist
    # We require the newest version of doctest plus to use +IGNORE_WARNINGS
    pytest-doctestplus >= 0.5

    # The devdeps factor is intended to be used to install the latest developer version.
    # of key dependencies.
    devdeps: cython
    devdeps,figure_astropydev: git+https://github.com/astropy/astropy

    # Oldest deps we pin against.
    oldestdeps: astropy<3.2
    oldestdeps: numpy<1.15.0
    oldestdeps: matplotlib<3.0

    # Just installs the extra pytest-cov plugin.
    pytest-cov

    # These are specfici online extras we use to run the online tests.
    online: pytest-rerunfailures
    online: pytest-timeout
    online: astroquery

# The following indicates which extras_require from setup.cfg will be installed
# dev is special in that it installs everything
extras =
    all,tests

commands =
    pip freeze
    !online: {env:PYTEST_COMMAND} {posargs}
    online: {env:PYTEST_COMMAND} --reruns 2 --timeout=180 --remote-data=any {posargs}
    astropydev: bash -ec "for f in ../examples/*/*.py; do [[ $f == *skip* ]] && continue; python "$f"; done"

[testenv:build_docs]
changedir = docs
description = Invoke sphinx-build to build the HTML docs
extras = all,docs
commands =
    pip freeze
    sphinx-build . ./_build/html -W -b html -d .docs/_build/.doctrees {posargs}

[testenv:codestyle]
skip_install = true
description = Run all style and file checks with pre-commit
deps =
    pre-commit
commands =
    pre-commit install-hooks
    pre-commit run --all-files

# This env requires tox-conda.
[testenv:figure]
basepython = python3.6
description = Run all figure tests with pinned versions
extras = all,tests
conda_deps =
    python = 3.6.8
    astropy = 3.1.2
    numpy = 1.16.2
    freetype = 2.10
    matplotlib = 3.1.1
    scipy = 1.2.1
    pandas = 0.24.2
conda_channels = conda-forge
commands = {env:PYTEST_COMMAND} -m "figure" {posargs}

# This env requires tox-conda.
[testenv:figure_astropydev]
basepython = python3.7
description = Run all figure tests with master astropy
extras = all,tests
conda_deps =
    python = 3.7.4
    numpy = 1.17.2
    freetype = 2.10
    matplotlib = 3.1.1
    scipy = 1.3.1
    pandas = 0.25.1
conda_channels = conda-forge
commands = {env:PYTEST_COMMAND} -m "figure" {posargs}

# This env requires tox-conda.
[testenv:py36-conda]
basepython = python3.6
extras =
deps =
conda_deps =
    astropy
    beautifulsoup4
    dask
    drms
    glymur
    hypothesis
    jinja2
    lxml
    matplotlib
    numpy
    openjpeg
    pandas
    parfive
    pytest
    pytest-astropy
    pytest-cov
    pytest-mock
    pytest-xdist
    scikit-image
    scipy
    sqlalchemy
    zeep
conda_channels = sunpy
commands = {env:PYTEST_COMMAND} {posargs}
