[tox]
envlist =
    py{36,37,38}-test{,-oldestdeps,-devdeps,-online}
    build_docs
    figure
    figure_astropydev
    conda
    codestyle
isolated_build = true

[testenv]

# We use bash in some of our enviroments so we have to whitelist it.
whitelist_externals=
    /bin/bash
    /usr/bin/bash

# Run the tests in a temporary directory to make sure that we don't import
# astropy from the source tree
changedir = .tmp/{envname}

# tox environments are constructued with so-called 'factors' (or terms)
# separated by hyphens, e.g. test-devdeps-cov. Lines below starting with factor:
# will only take effect if that factor is included in the environment name. To
# see a list of example environments that can be run, along with a description,
# run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage

setenv =
    MPLBACKEND = agg
    COLUMNS = 180
    PYTEST_COMMAND = pytest -vvv --pyargs sunpy --cov=sunpy --cov-config={toxinidir}/setup.cfg {toxinidir}/docs
    astropydev,build_docs: HOME = {envtmpdir}

deps =

    # All our tests run in parallel which this plugin allows us to.
    pytest-xdist

    # The devdeps factor is intended to be used to install the latest developer version.
    # of key dependencies.
    devdeps: cython
    devdeps,figure_astropydev: git+https://github.com/astropy/astropy
    devdeps: astropy<3.2

    # Just installs the extra pytest-cov plugin.
    cov: pytest-cov

    # These are specfici online extras we use to run the online tests.
    online: pytest-rerunfailures
    online: pytest-timeout
    online: astroquery

# The following indicates which extras_require from setup.cfg will be installed
# dev is special in that it installs everything
extras =
    all,tests

commands =
    pip freeze
    !online: {env:PYTEST_COMMAND} {posargs}
    online: {env:PYTEST_COMMAND} --reruns 2 --timeout=180 --remote-data=any {posargs}
    astropydev: bash -ec "for f in ../examples/*/*.py; do [[ $f == *skip* ]] && continue; python "$f"; done"

[testenv:build_docs]
changedir = docs
description = Invoke sphinx-build to build the HTML docs
extras = all,docs
commands =
    pip freeze
    sphinx-build . ./_build/html -W -b html -d .docs/_build/.doctrees {posargs}

[testenv:codestyle]
# We list the warnings/errors to check for here rather than in setup.cfg because
# we don't want these options to apply whenever anyone calls flake8 from the
# command-line or their code editor - in this case all warnings/errors should be
# checked for. The warnings/errors we check for here are:
# E101 - mix of tabs and spaces
# W191 - use of tabs
# W291 - trailing whitespace
# W292 - no newline at end of file
# W293 - trailing whitespace
# W391 - blank line at end of file
# E111 - 4 spaces per indentation level
# E112 - 4 spaces per indentation level
# E113 - 4 spaces per indentation level
# E301 - expected 1 blank line, found 0
# E302 - expected 2 blank lines, found 0
# E303 - too many blank lines (3)
# E304 - blank lines found after function decorator
# E305 - expected 2 blank lines after class or function definition
# E306 - expected 1 blank line before a nested definition
# E502 - the backslash is redundant between brackets
# E722 - do not use bare except
# E901 - SyntaxError or IndentationError
# E902 - IOError
# E999: SyntaxError -- failed to compile a file into an Abstract Syntax Tree
# F822: undefined name in __all__
# F823: local variable name referenced before assignment
skip_install = true
description = check code style, e.g. with flake8
deps = flake8
commands = flake8 sunpy --count --select=E101,W191,W291,W292,W293,W391,E111,E112,E113,E30,E502,E722,E901,E902,E999,F822,F823



# This env requires tox-conda.
[testenv:figure]
basepython = python3.6
extras = all,tests
conda_deps =
    python = 3.6.8
    astropy = 3.1.2
    numpy = 1.16.2
    freetype = 2.10
    matplotlib = 3.1.1
    scipy = 1.2.1
    pandas = 0.24.2
    pytest-cov
conda_channels = conda-forge
commands = {env:PYTEST_COMMAND} -m "figure" {posargs}

# This env requires tox-conda.
[testenv:figure_astropydev]
basepython = python3.7
extras = all,tests
conda_deps =
    python = 3.7.4
    numpy = 1.17.2
    freetype = 2.10
    matplotlib = 3.1.1
    scipy = 1.3.1
    pandas = 0.25.1
    pytest-cov
conda_channels = conda-forge
commands = {env:PYTEST_COMMAND} -m "figure" {posargs}

# This env requires tox-conda.
[testenv:py36-conda]
basepython = python3.6
extras =
deps =
conda_deps =
    jsonschema=2.6
    asdf
    astropy<3.2
    beautifulsoup4
    dask
    drms
    glymur
    hypothesis
    jinja2
    lxml
    matplotlib
    numpy
    openjpeg
    pandas
    parfive
    pytest
    pytest-astropy
    pytest-cov
    pytest-mock
    pytest-xdist
    scikit-image
    scipy
    sqlalchemy
    zeep
conda_channels = sunpy
commands = {env:PYTEST_COMMAND} {posargs}
