version: 2.1

no-backports: &no-backports
  name: Skip any branches called cherry-pick
  command: |
    if [[ "${CIRCLE_BRANCH}" == *"cherry-pick"* || "${CIRCLE_BRANCH}" == *"backport"* ]]; then
      circleci step halt
    fi

skip-check: &skip-check
  name: Check for [ci skip]
  command: bash .circleci/early_exit.sh

merge-check: &merge-check
  name: Check if we need to merge upstream master
  command: |
    if [[ -n "${CIRCLE_PR_NUMBER}" ]]; then
      git fetch origin --tags
      git fetch origin +refs/pull/$CIRCLE_PR_NUMBER/merge:pr/$CIRCLE_PR_NUMBER/merge
      git checkout -qf pr/$CIRCLE_PR_NUMBER/merge
    fi

apt-run: &apt-install
  name: Install apt packages
  command: |
    apt update
    apt install -y graphviz build-essential libopenjp2-7

jobs:
  twine-check:
    docker:
      - image: continuumio/miniconda3
    steps:
      - run: *no-backports
      - checkout
      - run: *skip-check
      - run: *merge-check
      - run: pip install -U pep517
      - run: python -m pep517.build --source .
      - run: python -m pip install -U --user --force-reinstall twine
      - run: python -m twine check dist/*

  pip-install:
    docker:
      - image: continuumio/miniconda3
    steps:
      - run: *no-backports
      - checkout
      - run: *skip-check
      - run: *merge-check
      - run: *apt-install
      - run: pip install -U pip
      - run: pip install --progress-bar off .[all,dev]
      - run: pip install -e .[all,dev]

  html-docs:
    docker:
      - image: continuumio/miniconda3
    environment:
      SUNPY_SAMPLEDIR=/root/sunpy/data/sample_data/
    steps:
      - run: *no-backports
      - checkout
      - run: *skip-check
      - restore_cache:
          keys: sample-data-v12
      - run: *merge-check
      - run: *apt-install
      - run: pip install -U tox tox-pypi-filter>=0.12
      - run: tox -e build_docs
      - save_cache:
          key: sample-data-v12
          paths:
            - /root/sunpy/data/sample_data/
      - run:
          name: Prepare for upload
          command: |
            # If it's not a PR, don't upload
            if [ -z "${CIRCLE_PULL_REQUEST}" ]; then
              rm -r docs/_build/html/*
            else
              # If it is a PR, delete sources, because it's a lot of files
              # which we don't really need to upload
              rm -r docs/_build/html/_sources
            fi
      - store_artifacts:
          path: docs/_build/html
      - run:
          name: "Built documentation is available at:"
          command: DOCS_URL="${CIRCLE_BUILD_URL}/artifacts/${CIRCLE_NODE_INDEX}/docs/_build/html/index.html"; echo $DOCS_URL

  figure:
    parameters:
      jobname:
        type: string
    docker:
      - image: continuumio/miniconda3
    environment:
      TOXENV=<< parameters.jobname >>
    steps:
      - run: *no-backports
      - checkout
      - run: *skip-check
      - run: *merge-check
      - run: *apt-install
      - run: pip install -U tox tox-conda codecov
      - run: tox
      - run: codecov
      - store_artifacts:
          path: .tmp/<< parameters.jobname >>/figure_test_images
      - run:
          name: "Image comparison page is available at: "
          command: echo "${CIRCLE_BUILD_URL}/artifacts/${CIRCLE_NODE_INDEX}/.tmp/${TOXENV}/figure_test_images/fig_comparison.html"
      - persist_to_workspace:
          root: .tmp/
          paths: << parameters.jobname >>/figure_test_images

  deploy-reference-images:
    docker:
      - image: cimg/base:2020.01
    environment:
      GIT_SSH_COMMAND=ssh -i ~/.ssh/id_rsa_7b8fc81c13a3b446ec9aa50d3f626978
    steps:
      - attach_workspace:
          at: .tmp
      # Clear out all the ssh keys so that it always uses the write deploy key
      - run: ssh-add -D
      # Add private key for deploying to the figure tests repo
      - add_ssh_keys:
          fingerprints: "7b:8f:c8:1c:13:a3:b4:46:ec:9a:a5:0d:3f:62:69:78"
      - run: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run: git clone git@github.com:sunpy/sunpy-figure-tests.git -b sunpy-${CIRCLE_BRANCH} ~/sunpy-figure-tests/
      - run: cd .tmp/ && find . -maxdepth 1 -name "figure_*" -type d -exec bash -c 'mkdir ~/sunpy-figure-tests/figures/$1; cp -v "$1"/figure_test_images/*png "/home/circleci/sunpy-figure-tests/figures/$1"' Cp {} \;
      - run: git config --global user.email "sunpy@circleci" && git config --global user.name "SunPy Circle CI"
      - deploy:
          command: cd ~/sunpy-figure-tests/; git add . && git commit -m "Update reference figures from ${CIRCLE_BRANCH}" || echo "No changes to reference images to deploy" && git push

workflows:
  version: 2

  packaging:
    jobs:
      - twine-check
      - pip-install

  figure-tests:
    jobs:
      - figure:
          name: << matrix.jobname >>
          matrix:
            parameters:
              jobname:
                - "figure_py36"
                - "figure_py37_astropydev"

      - deploy-reference-images:
          requires:
            - "figure_py36"
            - "figure_py37_astropydev"
          filters:
            branches:
              only:
                - master
                # - 1.1
                # - 1.0


  test-documentation:
    jobs:
      - html-docs

notify:
  webhooks:
    - url: https://giles.cadair.dev/circleci
