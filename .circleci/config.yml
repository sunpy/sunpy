no-backports: &no-backports
  name: Skip any branches called backport* but not PRs
  command: |
    if [[ -z "${CIRCLE_PULL_REQUEST}" && "${CIRCLE_BRANCH}" = *"backport"* ]]; then
      circleci step halt
    fi

skip-check: &skip-check
  name: Check for [ci skip]
  command: bash .circleci/early_exit.sh

merge-check: &merge-check
  name: Check if we need to merge upstream master
  command: |
    if [[ -n "${CIRCLE_PR_NUMBER}" ]]; then
      git fetch origin --tags
      git fetch origin +refs/pull/$CIRCLE_PR_NUMBER/merge:pr/$CIRCLE_PR_NUMBER/merge
      git checkout -qf pr/$CIRCLE_PR_NUMBER/merge
    fi

permission-run: &permission-run
  name: Fix permssions for installing
  command: |
    sudo chown -R circleci:circleci /usr/local/bin
    sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
    sudo chown -R circleci:circleci /usr/local/share/

apt-run: &apt-install
  name: Install apt packages
  command: |
    apt update
    apt install -y graphviz build-essential libopenjp2-7

sudo-apt-run: &sudo-apt-install
  name: Install apt packages
  command: |
    sudo apt update
    sudo apt install -y graphviz build-essential libopenjp2-7 git

version: 2
jobs:
  twine-check:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: *skip-check
      - run: *merge-check
      - run: *permission-run
      - run: pip install pep517
      - run: python -m pep517.build --source .
      - run: python -m pip install -U --user --force-reinstall twine
      - run: python -m twine check dist/*

  pip-install:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: *skip-check
      - run: *merge-check
      - run: *permission-run
      - run: *sudo-apt-install
      - run: pip install -U pip
      - run: pip install --progress-bar off .[all,dev]
      - run: pip install -e .[all,dev]

  32bit:
    docker:
      - image: i386/ubuntu:latest
    environment:
          MPLBACKEND: agg
          COLUMNS: 180
    steps:
      - restore_cache:
          keys: sample-data-v1
      - checkout
      - run: *skip-check
      - run:
          name: apt dependencies
          command: |
            export DEBIAN_FRONTEND="noninteractive"
            apt-get update
            apt-get install -y libfreetype6 libfreetype6-dev libpng-dev tk pkg-config python3-pip git openssh-client
      - run: pip3 install tox | cat
      - run: PYTHONHASHSEED=42 tox -e py36 -- -n=4

  figure-tests-36:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - run: *skip-check
      - run: *merge-check
      - run: *apt-install
      - run: pip install -U tox tox-conda codecov
      - run: tox -e figure
      - run: codecov
      - store_artifacts:
          path: figure_test_images
      - run:
          name: "Image comparison page is available at: "
          command: FIGS_URL="${CIRCLE_BUILD_URL}/artifacts/${CIRCLE_NODE_INDEX}/${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/figure_test_images/fig_comparison.html"; echo $FIGS_URL

  figure-tests-37-astropydev:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - run: *skip-check
      - run: *no-backports
      - run: *merge-check
      - run: *apt-install
      - run: pip install -U tox tox-conda codecov
      - run: tox -e figure_astropydev
      - run: codecov
      - store_artifacts:
          path: figure_test_images
      - run:
          name: "Image comparison page is available at: "
          command: FIGS_URL="${CIRCLE_BUILD_URL}/artifacts/${CIRCLE_NODE_INDEX}/${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/figure_test_images/fig_comparison.html"; echo $FIGS_URL

  html-docs:
    docker:
      - image: circleci/python:3.7
    steps:
      - restore_cache:
          keys: sample-data-v1
      - checkout
      - run: *skip-check
      - run: *merge-check
      - run: *permission-run
      - run: *sudo-apt-install
      - run: pip install -U tox
      - run: tox -e build_docs
      - run:
          name: Prepare for upload
          command: |
            # If it's not a PR, don't upload
            if [ -z "${CIRCLE_PULL_REQUEST}" ]; then
              rm -r docs/_build/html/*
            else
              # If it is a PR, delete sources, because it's a lot of files
              # which we don't really need to upload
              rm -r docs/_build/html/_sources
            fi
      - store_artifacts:
          path: docs/_build/html
      - run:
          name: "Built documentation is available at:"
          command: DOCS_URL="${CIRCLE_BUILD_URL}/artifacts/${CIRCLE_NODE_INDEX}/${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/docs/_build/html/index.html"; echo $DOCS_URL
      - save_cache:
          key: sample-data-v1
          paths:
            - ~/sunpy/data/sample_data

workflows:
  version: 2

  twine-check:
    jobs:
      - twine-check

  pip-install:
    jobs:
      - pip-install

  build-32:
    jobs:
      - 32bit

  figure-tests:
    jobs:
      - figure-tests-36
      - figure-tests-37-astropydev

  test-documentation:
    jobs:
      - html-docs

notify:
  webhooks:
    - url: https://giles.cadair.dev/circleci
